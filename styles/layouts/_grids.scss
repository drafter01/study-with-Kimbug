/*
* MOBILE (<768px) ------------------------------------
* fixture ------------------------ sm
* # of columns -------------------- 4
* gutter ------------------------- 20px
* margin  ------------------------ 5px
* container-size ----------------- 100% - ( 5px * 2 )
*
* TABLET (>=768px) ------------------------------------
* # of columns -------------------- 12
* fixture ------------------------ md
* gutter ------------------------- 20px
* margin  ------------------------ 30px
* container-size ----------------- 100% - ( 30px * 2 )
* max-container-size  ------------ 960px
*
* DESKTOP (>=1200px) ------------------------------------
* # of columns -------------------- 12
* fixture ------------------------ lg
* gutter ------------------------- 20px
* unit --------------------------- 75px
* margin  ------------------------ auto (고정된 값이니깐 퍼센트값이 아니라 정확한 숫자값으로 나타남)
* container-size ----------------- 1140px
* max-container-size  ------------ 1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns; // 이렇게 변수를 포함하면 더 효율적인 코드 작성이 가능함

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto; // container 가 항상 중앙에 위치하도록

  .row {
    display: flex;
    flex-wrap: wrap;
    // wrap(내용이 길어지면 다음줄로) 이어야지 사이즈 고정이 되어서 칼럼이 의미가 있음
  }

  // 모든 col-로 시작하는 class를 잡아야함
  [class^='col-'] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-sm-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-sm-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
